{
  "version": 3,
  "sources": ["../../node_modules/preact-render-to-string/src/lib/constants.js", "../../node_modules/preact-render-to-string/src/lib/util.js", "../../node_modules/preact-render-to-string/src/index.js", "../../node_modules/preact-iso/src/prerender.js"],
  "sourcesContent": ["// Options hooks\nexport const DIFF = '__b';\nexport const RENDER = '__r';\nexport const DIFFED = 'diffed';\nexport const COMMIT = '__c';\nexport const SKIP_EFFECTS = '__s';\nexport const CATCH_ERROR = '__e';\n\n// VNode properties\nexport const COMPONENT = '__c';\nexport const CHILDREN = '__k';\nexport const PARENT = '__';\nexport const MASK = '__m';\n\n// Component properties\nexport const VNODE = '__v';\nexport const DIRTY = '__d';\nexport const BITS = '__g';\nexport const NEXT_STATE = '__s';\nexport const CHILD_DID_SUSPEND = '__c';\n", "import { DIRTY, BITS } from './constants';\n\nexport const VOID_ELEMENTS = /^(?:area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)$/;\n// oxlint-disable-next-line no-control-regex\nexport const UNSAFE_NAME = /[\\s\\n\\\\/='\"\\0<>]/;\nexport const NAMESPACE_REPLACE_REGEX = /^(xlink|xmlns|xml)([A-Z])/;\nexport const HTML_LOWER_CASE = /^(?:accessK|auto[A-Z]|cell|ch|col|cont|cross|dateT|encT|form[A-Z]|frame|hrefL|inputM|maxL|minL|noV|playsI|popoverT|readO|rowS|src[A-Z]|tabI|useM|item[A-Z])/;\nexport const SVG_CAMEL_CASE = /^ac|^ali|arabic|basel|cap|clipPath$|clipRule$|color|dominant|enable|fill|flood|font|glyph[^R]|horiz|image|letter|lighting|marker[^WUH]|overline|panose|pointe|paint|rendering|shape|stop|strikethrough|stroke|text[^L]|transform|underline|unicode|units|^v[^i]|^w|^xH/;\n\n// Boolean DOM properties that translate to enumerated ('true'/'false') attributes\nexport const HTML_ENUMERATED = new Set(['draggable', 'spellcheck']);\n\nexport const COMPONENT_DIRTY_BIT = 1 << 3;\nexport function setDirty(component) {\n\tif (component[BITS] !== undefined) {\n\t\tcomponent[BITS] |= COMPONENT_DIRTY_BIT;\n\t} else {\n\t\tcomponent[DIRTY] = true;\n\t}\n}\n\nexport function unsetDirty(component) {\n\tif (component.__g !== undefined) {\n\t\tcomponent.__g &= ~COMPONENT_DIRTY_BIT;\n\t} else {\n\t\tcomponent[DIRTY] = false;\n\t}\n}\n\nexport function isDirty(component) {\n\tif (component.__g !== undefined) {\n\t\treturn (component.__g & COMPONENT_DIRTY_BIT) !== 0;\n\t}\n\treturn component[DIRTY] === true;\n}\n\n// DOM properties that should NOT have \"px\" added when numeric\nconst ENCODED_ENTITIES = /[\"&<]/;\n\n/** @param {string} str */\nexport function encodeEntities(str) {\n\t// Skip all work for strings with no entities needing encoding:\n\tif (str.length === 0 || ENCODED_ENTITIES.test(str) === false) return str;\n\n\tlet last = 0,\n\t\ti = 0,\n\t\tout = '',\n\t\tch = '';\n\n\t// Seek forward in str until the next entity char:\n\tfor (; i < str.length; i++) {\n\t\tswitch (str.charCodeAt(i)) {\n\t\t\tcase 34:\n\t\t\t\tch = '&quot;';\n\t\t\t\tbreak;\n\t\t\tcase 38:\n\t\t\t\tch = '&amp;';\n\t\t\t\tbreak;\n\t\t\tcase 60:\n\t\t\t\tch = '&lt;';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\t\t// Append skipped/buffered characters and the encoded entity:\n\t\tif (i !== last) out = out + str.slice(last, i);\n\t\tout = out + ch;\n\t\t// Start the next seek/buffer after the entity's offset:\n\t\tlast = i + 1;\n\t}\n\tif (i !== last) out = out + str.slice(last, i);\n\treturn out;\n}\n\nexport let indent = (s, char) =>\n\tString(s).replace(/(\\n+)/g, '$1' + (char || '\\t'));\n\nexport let isLargeString = (s, length, ignoreLines) =>\n\tString(s).length > (length || 40) ||\n\t(!ignoreLines && String(s).indexOf('\\n') !== -1) ||\n\tString(s).indexOf('<') !== -1;\n\nconst JS_TO_CSS = {};\n\nconst IS_NON_DIMENSIONAL = new Set([\n\t'animation-iteration-count',\n\t'border-image-outset',\n\t'border-image-slice',\n\t'border-image-width',\n\t'box-flex',\n\t'box-flex-group',\n\t'box-ordinal-group',\n\t'column-count',\n\t'fill-opacity',\n\t'flex',\n\t'flex-grow',\n\t'flex-negative',\n\t'flex-order',\n\t'flex-positive',\n\t'flex-shrink',\n\t'flood-opacity',\n\t'font-weight',\n\t'grid-column',\n\t'grid-row',\n\t'line-clamp',\n\t'line-height',\n\t'opacity',\n\t'order',\n\t'orphans',\n\t'stop-opacity',\n\t'stroke-dasharray',\n\t'stroke-dashoffset',\n\t'stroke-miterlimit',\n\t'stroke-opacity',\n\t'stroke-width',\n\t'tab-size',\n\t'widows',\n\t'z-index',\n\t'zoom'\n]);\n\nconst CSS_REGEX = /[A-Z]/g;\n// Convert an Object style to a CSSText string\nexport function styleObjToCss(s) {\n\tlet str = '';\n\tfor (let prop in s) {\n\t\tlet val = s[prop];\n\t\tif (val != null && val !== '') {\n\t\t\tconst name =\n\t\t\t\tprop[0] == '-'\n\t\t\t\t\t? prop\n\t\t\t\t\t: JS_TO_CSS[prop] ||\n\t\t\t\t\t  (JS_TO_CSS[prop] = prop.replace(CSS_REGEX, '-$&').toLowerCase());\n\n\t\t\tlet suffix = ';';\n\t\t\tif (\n\t\t\t\ttypeof val === 'number' &&\n\t\t\t\t// Exclude custom-attributes\n\t\t\t\t!name.startsWith('--') &&\n\t\t\t\t!IS_NON_DIMENSIONAL.has(name)\n\t\t\t) {\n\t\t\t\tsuffix = 'px;';\n\t\t\t}\n\t\t\tstr = str + name + ':' + val + suffix;\n\t\t}\n\t}\n\treturn str || undefined;\n}\n\n/**\n * Get flattened children from the children prop\n * @param {Array} accumulator\n * @param {any} children A `props.children` opaque object.\n * @returns {Array} accumulator\n * @private\n */\nexport function getChildren(accumulator, children) {\n\tif (Array.isArray(children)) {\n\t\tchildren.reduce(getChildren, accumulator);\n\t} else if (children != null && children !== false) {\n\t\taccumulator.push(children);\n\t}\n\treturn accumulator;\n}\n\nfunction markAsDirty() {\n\tthis.__d = true;\n}\n\nexport function createComponent(vnode, context) {\n\treturn {\n\t\t__v: vnode,\n\t\tcontext,\n\t\tprops: vnode.props,\n\t\t// silently drop state updates\n\t\tsetState: markAsDirty,\n\t\tforceUpdate: markAsDirty,\n\t\t__d: true,\n\t\t// hooks\n\t\t// oxlint-disable-next-line no-new-array\n\t\t__h: new Array(0)\n\t};\n}\n\n// Necessary for createContext api. Setting this property will pass\n// the context value as `this.context` just for this component.\nexport function getContext(nodeName, context) {\n\tlet cxType = nodeName.contextType;\n\tlet provider = cxType && context[cxType.__c];\n\treturn cxType != null\n\t\t? provider\n\t\t\t? provider.props.value\n\t\t\t: cxType.__\n\t\t: context;\n}\n\n/**\n * @template T\n */\nexport class Deferred {\n\tconstructor() {\n\t\t/** @type {Promise<T>} */\n\t\tthis.promise = new Promise((resolve, reject) => {\n\t\t\tthis.resolve = resolve;\n\t\t\tthis.reject = reject;\n\t\t});\n\t}\n}\n", "import {\n\tencodeEntities,\n\tstyleObjToCss,\n\tUNSAFE_NAME,\n\tNAMESPACE_REPLACE_REGEX,\n\tHTML_LOWER_CASE,\n\tHTML_ENUMERATED,\n\tSVG_CAMEL_CASE,\n\tcreateComponent,\n\tsetDirty,\n\tunsetDirty,\n\tisDirty\n} from './lib/util.js';\nimport { options, h, Fragment } from 'preact';\nimport {\n\tCHILDREN,\n\tCOMMIT,\n\tCOMPONENT,\n\tDIFF,\n\tDIFFED,\n\tNEXT_STATE,\n\tPARENT,\n\tRENDER,\n\tSKIP_EFFECTS,\n\tVNODE,\n\tCATCH_ERROR\n} from './lib/constants.js';\n\nconst EMPTY_OBJ = {};\nconst EMPTY_ARR = [];\nconst isArray = Array.isArray;\nconst assign = Object.assign;\nconst EMPTY_STR = '';\nconst BEGIN_SUSPENSE_DENOMINATOR = '<!--$s-->';\nconst END_SUSPENSE_DENOMINATOR = '<!--/$s-->';\n\n// Global state for the current render pass\nlet beforeDiff, afterDiff, renderHook, ummountHook;\n\n/**\n * Render Preact JSX + Components to an HTML string.\n * @param {VNode} vnode\tJSX Element / VNode to render\n * @param {Object} [context={}] Initial root context object\n * @param {RendererState} [_rendererState] for internal use\n * @returns {string} serialized HTML\n */\nexport function renderToString(vnode, context, _rendererState) {\n\t// Performance optimization: `renderToString` is synchronous and we\n\t// therefore don't execute any effects. To do that we pass an empty\n\t// array to `options._commit` (`__c`). But we can go one step further\n\t// and avoid a lot of dirty checks and allocations by setting\n\t// `options._skipEffects` (`__s`) too.\n\tconst previousSkipEffects = options[SKIP_EFFECTS];\n\toptions[SKIP_EFFECTS] = true;\n\n\t// store options hooks once before each synchronous render call\n\tbeforeDiff = options[DIFF];\n\tafterDiff = options[DIFFED];\n\trenderHook = options[RENDER];\n\tummountHook = options.unmount;\n\n\tconst parent = h(Fragment, null);\n\tparent[CHILDREN] = [vnode];\n\n\ttry {\n\t\tconst rendered = _renderToString(\n\t\t\tvnode,\n\t\t\tcontext || EMPTY_OBJ,\n\t\t\tfalse,\n\t\t\tundefined,\n\t\t\tparent,\n\t\t\tfalse,\n\t\t\t_rendererState\n\t\t);\n\n\t\tif (isArray(rendered)) {\n\t\t\treturn rendered.join(EMPTY_STR);\n\t\t}\n\t\treturn rendered;\n\t} catch (e) {\n\t\tif (e.then) {\n\t\t\tthrow new Error('Use \"renderToStringAsync\" for suspenseful rendering.');\n\t\t}\n\n\t\tthrow e;\n\t} finally {\n\t\t// options._commit, we don't schedule any effects in this library right now,\n\t\t// so we can pass an empty queue to this hook.\n\t\tif (options[COMMIT]) options[COMMIT](vnode, EMPTY_ARR);\n\t\toptions[SKIP_EFFECTS] = previousSkipEffects;\n\t\tEMPTY_ARR.length = 0;\n\t}\n}\n\n/**\n * Render Preact JSX + Components to an HTML string.\n * @param {VNode} vnode\tJSX Element / VNode to render\n * @param {Object} [context={}] Initial root context object\n * @returns {string} serialized HTML\n */\nexport async function renderToStringAsync(vnode, context) {\n\t// Performance optimization: `renderToString` is synchronous and we\n\t// therefore don't execute any effects. To do that we pass an empty\n\t// array to `options._commit` (`__c`). But we can go one step further\n\t// and avoid a lot of dirty checks and allocations by setting\n\t// `options._skipEffects` (`__s`) too.\n\tconst previousSkipEffects = options[SKIP_EFFECTS];\n\toptions[SKIP_EFFECTS] = true;\n\n\t// store options hooks once before each synchronous render call\n\tbeforeDiff = options[DIFF];\n\tafterDiff = options[DIFFED];\n\trenderHook = options[RENDER];\n\tummountHook = options.unmount;\n\n\tconst parent = h(Fragment, null);\n\tparent[CHILDREN] = [vnode];\n\n\ttry {\n\t\tconst rendered = await _renderToString(\n\t\t\tvnode,\n\t\t\tcontext || EMPTY_OBJ,\n\t\t\tfalse,\n\t\t\tundefined,\n\t\t\tparent,\n\t\t\ttrue,\n\t\t\tundefined\n\t\t);\n\n\t\tif (isArray(rendered)) {\n\t\t\tlet count = 0;\n\t\t\tlet resolved = rendered;\n\n\t\t\t// Resolving nested Promises with a maximum depth of 25\n\t\t\twhile (\n\t\t\t\tresolved.some(\n\t\t\t\t\t(element) => element && typeof element.then === 'function'\n\t\t\t\t) &&\n\t\t\t\tcount++ < 25\n\t\t\t) {\n\t\t\t\tresolved = (await Promise.all(resolved)).flat();\n\t\t\t}\n\n\t\t\treturn resolved.join(EMPTY_STR);\n\t\t}\n\n\t\treturn rendered;\n\t} finally {\n\t\t// options._commit, we don't schedule any effects in this library right now,\n\t\t// so we can pass an empty queue to this hook.\n\t\tif (options[COMMIT]) options[COMMIT](vnode, EMPTY_ARR);\n\t\toptions[SKIP_EFFECTS] = previousSkipEffects;\n\t\tEMPTY_ARR.length = 0;\n\t}\n}\n\n/**\n * @param {VNode} vnode\n * @param {Record<string, unknown>} context\n */\nfunction renderClassComponent(vnode, context) {\n\tlet type = /** @type {import(\"preact\").ComponentClass<typeof vnode.props>} */ (vnode.type);\n\n\tlet isMounting = true;\n\tlet c;\n\tif (vnode[COMPONENT]) {\n\t\tisMounting = false;\n\t\tc = vnode[COMPONENT];\n\t\tc.state = c[NEXT_STATE];\n\t} else {\n\t\tc = new type(vnode.props, context);\n\t}\n\n\tvnode[COMPONENT] = c;\n\tc[VNODE] = vnode;\n\n\tc.props = vnode.props;\n\tc.context = context;\n\n\t// Turn off stateful rendering\n\tsetDirty(c);\n\n\tif (c.state == null) c.state = EMPTY_OBJ;\n\n\tif (c[NEXT_STATE] == null) {\n\t\tc[NEXT_STATE] = c.state;\n\t}\n\n\tif (type.getDerivedStateFromProps) {\n\t\tc.state = assign(\n\t\t\t{},\n\t\t\tc.state,\n\t\t\ttype.getDerivedStateFromProps(c.props, c.state)\n\t\t);\n\t} else if (isMounting && c.componentWillMount) {\n\t\tc.componentWillMount();\n\n\t\t// If the user called setState in cWM we need to flush pending,\n\t\t// state updates. This is the same behaviour in React.\n\t\tc.state = c[NEXT_STATE] !== c.state ? c[NEXT_STATE] : c.state;\n\t} else if (!isMounting && c.componentWillUpdate) {\n\t\tc.componentWillUpdate();\n\t}\n\n\tif (renderHook) renderHook(vnode);\n\n\treturn c.render(c.props, c.state, context);\n}\n\n/**\n * Recursively render VNodes to HTML.\n * @param {VNode|any} vnode\n * @param {any} context\n * @param {boolean} isSvgMode\n * @param {any} selectValue\n * @param {VNode} parent\n * @param {boolean} asyncMode\n * @param {RendererState | undefined} [renderer]\n * @returns {string | Promise<string> | (string | Promise<string>)[]}\n */\nfunction _renderToString(\n\tvnode,\n\tcontext,\n\tisSvgMode,\n\tselectValue,\n\tparent,\n\tasyncMode,\n\trenderer\n) {\n\t// Ignore non-rendered VNodes/values\n\tif (\n\t\tvnode == null ||\n\t\tvnode === true ||\n\t\tvnode === false ||\n\t\tvnode === EMPTY_STR\n\t) {\n\t\treturn EMPTY_STR;\n\t}\n\n\tlet vnodeType = typeof vnode;\n\t// Text VNodes: escape as HTML\n\tif (vnodeType != 'object') {\n\t\tif (vnodeType == 'function') return EMPTY_STR;\n\t\treturn vnodeType == 'string' ? encodeEntities(vnode) : vnode + EMPTY_STR;\n\t}\n\n\t// Recurse into children / Arrays\n\tif (isArray(vnode)) {\n\t\tlet rendered = EMPTY_STR,\n\t\t\trenderArray;\n\t\tparent[CHILDREN] = vnode;\n\t\tconst vnodeLength = vnode.length;\n\t\tfor (let i = 0; i < vnodeLength; i++) {\n\t\t\tlet child = vnode[i];\n\t\t\tif (child == null || typeof child == 'boolean') continue;\n\n\t\t\tconst childRender = _renderToString(\n\t\t\t\tchild,\n\t\t\t\tcontext,\n\t\t\t\tisSvgMode,\n\t\t\t\tselectValue,\n\t\t\t\tparent,\n\t\t\t\tasyncMode,\n\t\t\t\trenderer\n\t\t\t);\n\n\t\t\tif (typeof childRender == 'string') {\n\t\t\t\trendered = rendered + childRender;\n\t\t\t} else {\n\t\t\t\tif (!renderArray) {\n\t\t\t\t\t// oxlint-disable-next-line no-new-array\n\t\t\t\t\trenderArray = new Array(vnodeLength);\n\t\t\t\t}\n\n\t\t\t\tif (rendered) renderArray.push(rendered);\n\n\t\t\t\trendered = EMPTY_STR;\n\n\t\t\t\tif (isArray(childRender)) {\n\t\t\t\t\trenderArray.push(...childRender);\n\t\t\t\t} else {\n\t\t\t\t\trenderArray.push(childRender);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (renderArray) {\n\t\t\tif (rendered) renderArray.push(rendered);\n\t\t\treturn renderArray;\n\t\t}\n\n\t\treturn rendered;\n\t}\n\n\t// VNodes have {constructor:undefined} to prevent JSON injection:\n\tif (vnode.constructor !== undefined) return EMPTY_STR;\n\n\tvnode[PARENT] = parent;\n\tif (beforeDiff) beforeDiff(vnode);\n\n\tlet type = vnode.type,\n\t\tprops = vnode.props;\n\n\t// Invoke rendering on Components\n\tif (typeof type == 'function') {\n\t\tlet cctx = context,\n\t\t\tcontextType,\n\t\t\trendered,\n\t\t\tcomponent;\n\t\tif (type === Fragment) {\n\t\t\t// Serialized precompiled JSX.\n\t\t\tif ('tpl' in props) {\n\t\t\t\tlet out = EMPTY_STR;\n\t\t\t\tfor (let i = 0; i < props.tpl.length; i++) {\n\t\t\t\t\tout = out + props.tpl[i];\n\n\t\t\t\t\tif (props.exprs && i < props.exprs.length) {\n\t\t\t\t\t\tconst value = props.exprs[i];\n\t\t\t\t\t\tif (value == null) continue;\n\n\t\t\t\t\t\t// Check if we're dealing with a vnode or an array of nodes\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof value == 'object' &&\n\t\t\t\t\t\t\t(value.constructor === undefined || isArray(value))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tout =\n\t\t\t\t\t\t\t\tout +\n\t\t\t\t\t\t\t\t_renderToString(\n\t\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\t\tisSvgMode,\n\t\t\t\t\t\t\t\t\tselectValue,\n\t\t\t\t\t\t\t\t\tvnode,\n\t\t\t\t\t\t\t\t\tasyncMode,\n\t\t\t\t\t\t\t\t\trenderer\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Values are pre-escaped by the JSX transform\n\t\t\t\t\t\t\tout = out + value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn out;\n\t\t\t} else if ('UNSTABLE_comment' in props) {\n\t\t\t\t// Fragments are the least used components of core that's why\n\t\t\t\t// branching here for comments has the least effect on perf.\n\t\t\t\treturn '<!--' + encodeEntities(props.UNSTABLE_comment) + '-->';\n\t\t\t}\n\n\t\t\trendered = props.children;\n\t\t} else {\n\t\t\tcontextType = type.contextType;\n\t\t\tif (contextType != null) {\n\t\t\t\tlet provider = context[contextType.__c];\n\t\t\t\tcctx = provider ? provider.props.value : contextType.__;\n\t\t\t}\n\n\t\t\tlet isClassComponent =\n\t\t\t\ttype.prototype && typeof type.prototype.render == 'function';\n\t\t\tif (isClassComponent) {\n\t\t\t\trendered = /**#__NOINLINE__**/ renderClassComponent(vnode, cctx);\n\t\t\t\tcomponent = vnode[COMPONENT];\n\t\t\t} else {\n\t\t\t\tvnode[COMPONENT] = component = /**#__NOINLINE__**/ createComponent(\n\t\t\t\t\tvnode,\n\t\t\t\t\tcctx\n\t\t\t\t);\n\n\t\t\t\t// If a hook invokes setState() to invalidate the component during rendering,\n\t\t\t\t// re-render it up to 25 times to allow \"settling\" of memoized states.\n\t\t\t\t// Note:\n\t\t\t\t//   This will need to be updated for Preact 11 to use internal.flags rather than component._dirty:\n\t\t\t\t//   https://github.com/preactjs/preact/blob/d4ca6fdb19bc715e49fd144e69f7296b2f4daa40/src/diff/component.js#L35-L44\n\t\t\t\tlet count = 0;\n\t\t\t\twhile (isDirty(component) && count++ < 25) {\n\t\t\t\t\tunsetDirty(component);\n\n\t\t\t\t\tif (renderHook) renderHook(vnode);\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\trendered = type.call(component, props, cctx);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tif (asyncMode) {\n\t\t\t\t\t\t\tvnode._suspended = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsetDirty(component);\n\t\t\t}\n\n\t\t\tif (component.getChildContext != null) {\n\t\t\t\tcontext = assign({}, context, component.getChildContext());\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tisClassComponent &&\n\t\t\t\toptions.errorBoundaries &&\n\t\t\t\t(type.getDerivedStateFromError || component.componentDidCatch)\n\t\t\t) {\n\t\t\t\t// When a component returns a Fragment node we flatten it in core, so we\n\t\t\t\t// need to mirror that logic here too\n\t\t\t\tlet isTopLevelFragment =\n\t\t\t\t\trendered != null &&\n\t\t\t\t\trendered.type === Fragment &&\n\t\t\t\t\trendered.key == null &&\n\t\t\t\t\trendered.props.tpl == null;\n\t\t\t\trendered = isTopLevelFragment ? rendered.props.children : rendered;\n\n\t\t\t\ttry {\n\t\t\t\t\treturn _renderToString(\n\t\t\t\t\t\trendered,\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\tisSvgMode,\n\t\t\t\t\t\tselectValue,\n\t\t\t\t\t\tvnode,\n\t\t\t\t\t\tasyncMode,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\trenderer\n\t\t\t\t\t);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (type.getDerivedStateFromError) {\n\t\t\t\t\t\tcomponent[NEXT_STATE] = type.getDerivedStateFromError(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (component.componentDidCatch) {\n\t\t\t\t\t\tcomponent.componentDidCatch(err, EMPTY_OBJ);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isDirty(component)) {\n\t\t\t\t\t\trendered = renderClassComponent(vnode, context);\n\t\t\t\t\t\tcomponent = vnode[COMPONENT];\n\n\t\t\t\t\t\tif (component.getChildContext != null) {\n\t\t\t\t\t\t\tcontext = assign({}, context, component.getChildContext());\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet isTopLevelFragment =\n\t\t\t\t\t\t\trendered != null &&\n\t\t\t\t\t\t\trendered.type === Fragment &&\n\t\t\t\t\t\t\trendered.key == null &&\n\t\t\t\t\t\t\trendered.props.tpl == null;\n\t\t\t\t\t\trendered = isTopLevelFragment ? rendered.props.children : rendered;\n\n\t\t\t\t\t\treturn _renderToString(\n\t\t\t\t\t\t\trendered,\n\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\tisSvgMode,\n\t\t\t\t\t\t\tselectValue,\n\t\t\t\t\t\t\tvnode,\n\t\t\t\t\t\t\tasyncMode,\n\t\t\t\t\t\t\trenderer\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn EMPTY_STR;\n\t\t\t\t} finally {\n\t\t\t\t\tif (afterDiff) afterDiff(vnode);\n\n\t\t\t\t\tif (ummountHook) ummountHook(vnode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// When a component returns a Fragment node we flatten it in core, so we\n\t\t// need to mirror that logic here too\n\t\tlet isTopLevelFragment =\n\t\t\trendered != null &&\n\t\t\trendered.type === Fragment &&\n\t\t\trendered.key == null &&\n\t\t\trendered.props.tpl == null;\n\t\trendered = isTopLevelFragment ? rendered.props.children : rendered;\n\n\t\ttry {\n\t\t\t// Recurse into children before invoking the after-diff hook\n\t\t\tconst str = _renderToString(\n\t\t\t\trendered,\n\t\t\t\tcontext,\n\t\t\t\tisSvgMode,\n\t\t\t\tselectValue,\n\t\t\t\tvnode,\n\t\t\t\tasyncMode,\n\t\t\t\trenderer\n\t\t\t);\n\n\t\t\tif (afterDiff) afterDiff(vnode);\n\t\t\t// when we are dealing with suspense we can't do this...\n\n\t\t\tif (options.unmount) options.unmount(vnode);\n\n\t\t\tif (vnode._suspended) {\n\t\t\t\tif (typeof str === 'string') {\n\t\t\t\t\treturn BEGIN_SUSPENSE_DENOMINATOR + str + END_SUSPENSE_DENOMINATOR;\n\t\t\t\t} else if (isArray(str)) {\n\t\t\t\t\tstr.unshift(BEGIN_SUSPENSE_DENOMINATOR);\n\t\t\t\t\tstr.push(END_SUSPENSE_DENOMINATOR);\n\t\t\t\t\treturn str;\n\t\t\t\t}\n\n\t\t\t\treturn str.then(\n\t\t\t\t\t(resolved) =>\n\t\t\t\t\t\tBEGIN_SUSPENSE_DENOMINATOR + resolved + END_SUSPENSE_DENOMINATOR\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn str;\n\t\t} catch (error) {\n\t\t\tif (!asyncMode && renderer && renderer.onError) {\n\t\t\t\tlet res = renderer.onError(error, vnode, (child, parent) =>\n\t\t\t\t\t_renderToString(\n\t\t\t\t\t\tchild,\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\tisSvgMode,\n\t\t\t\t\t\tselectValue,\n\t\t\t\t\t\tparent,\n\t\t\t\t\t\tasyncMode,\n\t\t\t\t\t\trenderer\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\tif (res !== undefined) return res;\n\n\t\t\t\tlet errorHook = options[CATCH_ERROR];\n\t\t\t\tif (errorHook) errorHook(error, vnode);\n\t\t\t\treturn EMPTY_STR;\n\t\t\t}\n\n\t\t\tif (!asyncMode) throw error;\n\n\t\t\tif (!error || typeof error.then != 'function') throw error;\n\n\t\t\tconst renderNestedChildren = () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst result = _renderToString(\n\t\t\t\t\t\trendered,\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\tisSvgMode,\n\t\t\t\t\t\tselectValue,\n\t\t\t\t\t\tvnode,\n\t\t\t\t\t\tasyncMode,\n\t\t\t\t\t\trenderer\n\t\t\t\t\t);\n\t\t\t\t\treturn vnode._suspended\n\t\t\t\t\t\t? BEGIN_SUSPENSE_DENOMINATOR + result + END_SUSPENSE_DENOMINATOR\n\t\t\t\t\t\t: result;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (!e || typeof e.then != 'function') throw e;\n\n\t\t\t\t\treturn e.then(renderNestedChildren);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treturn error.then(renderNestedChildren);\n\t\t}\n\t}\n\n\t// Serialize Element VNodes to HTML\n\tlet s = '<' + type,\n\t\thtml = EMPTY_STR,\n\t\tchildren;\n\n\tfor (let name in props) {\n\t\tlet v = props[name];\n\t\tv = isSignal(v) ? v.value : v;\n\n\t\tif (typeof v == 'function' && name !== 'class' && name !== 'className') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tswitch (name) {\n\t\t\tcase 'children':\n\t\t\t\tchildren = v;\n\t\t\t\tcontinue;\n\n\t\t\t// VDOM-specific props\n\t\t\tcase 'key':\n\t\t\tcase 'ref':\n\t\t\tcase '__self':\n\t\t\tcase '__source':\n\t\t\t\tcontinue;\n\n\t\t\t// prefer for/class over htmlFor/className\n\t\t\tcase 'htmlFor':\n\t\t\t\tif ('for' in props) continue;\n\t\t\t\tname = 'for';\n\t\t\t\tbreak;\n\t\t\tcase 'className':\n\t\t\t\tif ('class' in props) continue;\n\t\t\t\tname = 'class';\n\t\t\t\tbreak;\n\n\t\t\t// Form element reflected properties\n\t\t\tcase 'defaultChecked':\n\t\t\t\tname = 'checked';\n\t\t\t\tbreak;\n\t\t\tcase 'defaultSelected':\n\t\t\t\tname = 'selected';\n\t\t\t\tbreak;\n\n\t\t\t// Special value attribute handling\n\t\t\tcase 'defaultValue':\n\t\t\tcase 'value':\n\t\t\t\tname = 'value';\n\t\t\t\tswitch (type) {\n\t\t\t\t\t// <textarea value=\"a&b\"> --> <textarea>a&amp;b</textarea>\n\t\t\t\t\tcase 'textarea':\n\t\t\t\t\t\tchildren = v;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t// <select value> is serialized as a selected attribute on the matching option child\n\t\t\t\t\tcase 'select':\n\t\t\t\t\t\tselectValue = v;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t// Add a selected attribute to <option> if its value matches the parent <select> value\n\t\t\t\t\tcase 'option':\n\t\t\t\t\t\tif (selectValue == v && !('selected' in props)) {\n\t\t\t\t\t\t\ts = s + ' selected';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'dangerouslySetInnerHTML':\n\t\t\t\thtml = v && v.__html;\n\t\t\t\tcontinue;\n\n\t\t\t// serialize object styles to a CSS string\n\t\t\tcase 'style':\n\t\t\t\tif (typeof v === 'object') {\n\t\t\t\t\tv = styleObjToCss(v);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'acceptCharset':\n\t\t\t\tname = 'accept-charset';\n\t\t\t\tbreak;\n\t\t\tcase 'httpEquiv':\n\t\t\t\tname = 'http-equiv';\n\t\t\t\tbreak;\n\n\t\t\tdefault: {\n\t\t\t\tif (NAMESPACE_REPLACE_REGEX.test(name)) {\n\t\t\t\t\tname = name.replace(NAMESPACE_REPLACE_REGEX, '$1:$2').toLowerCase();\n\t\t\t\t} else if (UNSAFE_NAME.test(name)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (\n\t\t\t\t\t(name[4] === '-' || HTML_ENUMERATED.has(name)) &&\n\t\t\t\t\tv != null\n\t\t\t\t) {\n\t\t\t\t\t// serialize boolean aria-xyz or enumerated attribute values as strings\n\t\t\t\t\tv = v + EMPTY_STR;\n\t\t\t\t} else if (isSvgMode) {\n\t\t\t\t\tif (SVG_CAMEL_CASE.test(name)) {\n\t\t\t\t\t\tname =\n\t\t\t\t\t\t\tname === 'panose1'\n\t\t\t\t\t\t\t\t? 'panose-1'\n\t\t\t\t\t\t\t\t: name.replace(/([A-Z])/g, '-$1').toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t} else if (HTML_LOWER_CASE.test(name)) {\n\t\t\t\t\tname = name.toLowerCase();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// write this attribute to the buffer\n\t\tif (v != null && v !== false) {\n\t\t\tif (v === true || v === EMPTY_STR) {\n\t\t\t\ts = s + ' ' + name;\n\t\t\t} else {\n\t\t\t\ts =\n\t\t\t\t\ts +\n\t\t\t\t\t' ' +\n\t\t\t\t\tname +\n\t\t\t\t\t'=\"' +\n\t\t\t\t\t(typeof v == 'string' ? encodeEntities(v) : v + EMPTY_STR) +\n\t\t\t\t\t'\"';\n\t\t\t}\n\t\t}\n\t}\n\n\tif (UNSAFE_NAME.test(type)) {\n\t\t// this seems to performs a lot better than throwing\n\t\t// return '<!-- -->';\n\t\tthrow new Error(`${type} is not a valid HTML tag name in ${s}>`);\n\t}\n\n\tif (html) {\n\t\t// dangerouslySetInnerHTML defined this node's contents\n\t} else if (typeof children === 'string') {\n\t\t// single text child\n\t\thtml = encodeEntities(children);\n\t} else if (children != null && children !== false && children !== true) {\n\t\t// recurse into this element VNode's children\n\t\tlet childSvgMode =\n\t\t\ttype === 'svg' || (type !== 'foreignObject' && isSvgMode);\n\t\thtml = _renderToString(\n\t\t\tchildren,\n\t\t\tcontext,\n\t\t\tchildSvgMode,\n\t\t\tselectValue,\n\t\t\tvnode,\n\t\t\tasyncMode,\n\t\t\trenderer\n\t\t);\n\t}\n\n\tif (afterDiff) afterDiff(vnode);\n\n\tif (ummountHook) ummountHook(vnode);\n\n\t// Emit self-closing tag for empty void elements:\n\tif (!html && SELF_CLOSING.has(type)) {\n\t\treturn s + '/>';\n\t}\n\n\tconst endTag = '</' + type + '>';\n\tconst startTag = s + '>';\n\n\tif (isArray(html)) return [startTag, ...html, endTag];\n\telse if (typeof html != 'string') return [startTag, html, endTag];\n\treturn startTag + html + endTag;\n}\n\nconst SELF_CLOSING = new Set([\n\t'area',\n\t'base',\n\t'br',\n\t'col',\n\t'command',\n\t'embed',\n\t'hr',\n\t'img',\n\t'input',\n\t'keygen',\n\t'link',\n\t'meta',\n\t'param',\n\t'source',\n\t'track',\n\t'wbr'\n]);\n\nexport default renderToString;\nexport const render = renderToString;\nexport const renderToStaticMarkup = renderToString;\n\nfunction isSignal(x) {\n\treturn (\n\t\tx !== null &&\n\t\ttypeof x === 'object' &&\n\t\ttypeof x.peek === 'function' &&\n\t\t'value' in x\n\t);\n}\n", "import { h, options, cloneElement } from 'preact';\nimport { renderToStringAsync } from 'preact-render-to-string';\n\nlet vnodeHook;\n\nconst old = options.vnode;\noptions.vnode = vnode => {\n\tif (old) old(vnode);\n\tif (vnodeHook) vnodeHook(vnode);\n};\n\n/**\n * @param {ReturnType<h>} vnode The root JSX element to render (eg: `<App />`)\n * @param {object} [options]\n * @param {object} [options.props] Additional props to merge into the root JSX element\n */\nexport default async function prerender(vnode, options) {\n\toptions = options || {};\n\n\tconst props = options.props;\n\n\tif (typeof vnode === 'function') {\n\t\tvnode = h(vnode, props);\n\t} else if (props) {\n\t\tvnode = cloneElement(vnode, props);\n\t}\n\n\tlet links = new Set();\n\tvnodeHook = ({ type, props }) => {\n\t\tif (type === 'a' && props && props.href && (!props.target || props.target === '_self')) {\n\t\t\tlinks.add(props.href);\n\t\t}\n\t};\n\n\ttry {\n\t\tlet html = await renderToStringAsync(vnode);\n\t\thtml += `<script type=\"isodata\"></script>`;\n\t\treturn { html, links };\n\t} finally {\n\t\tvnodeHook = null;\n\t}\n}\n\n/**\n * Update `location` to current URL so routers can use things like `location.pathname`\n *\n * @param {string} path - current URL path\n */\nexport function locationStub(path) {\n\tglobalThis.location = {};\n\tconst u = new URL(path, 'http://localhost');\n\tfor (const i in u) {\n\t\ttry {\n\t\t\tglobalThis.location[i] = /to[A-Z]/.test(i)\n\t\t\t\t? u[i].bind(u)\n\t\t\t\t: String(u[i]);\n\t\t} catch {}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["DIFFED", "COMMIT", "SKIP_EFFECTS", "COMPONENT", "CHILDREN", "DIRTY", "NEXT_STATE", "UNSAFE_NAME", "NAMESPACE_REPLACE_REGEX", "HTML_LOWER_CASE", "SVG_CAMEL_CASE", "HTML_ENUMERATED", "Set", "setDirty", "component", "unsetDirty", "__g", "isDirty", "ENCODED_ENTITIES", "encodeEntities", "str", "length", "test", "last", "i", "out", "ch", "charCodeAt", "slice", "JS_TO_CSS", "IS_NON_DIMENSIONAL", "CSS_REGEX", "styleObjToCss", "s", "prop", "val", "name", "replace", "toLowerCase", "suffix", "startsWith", "has", "markAsDirty", "this", "__d", "createComponent", "vnode", "context", "__v", "props", "setState", "forceUpdate", "__h", "Array", "pact", "state", "value", "_Pact", "o", "_settle", "bind", "v", "then", "observer", "prototype", "onFulfilled", "onRejected", "result", "callback", "e", "_this", "thenable", "_for", "update", "body", "stage", "shouldContinue", "_isSettledPact", "updateValue", "reject", "_resumeAfterTest", "_resumeAfterBody", "_resumeAfterUpdate", "_finallyRethrows", "finalizer", "renderToStringAsync", "beforeDiff", "afterDiff", "renderHook", "ummountHook", "previousSkipEffects", "options", "unmount", "parent", "h", "Fragment", "Promise", "resolve", "_renderToString", "EMPTY_OBJ", "undefined", "rendered", "isArray", "_temp4", "_resolved$join", "resolved", "join", "EMPTY_STR", "_exit", "count", "_temp5", "some", "element", "all", "_Promise$all", "flat", "EMPTY_ARR", "_wasThrown", "_result", "assign", "Object", "BEGIN_SUSPENSE_DENOMINATOR", "END_SUSPENSE_DENOMINATOR", "renderClassComponent", "vnode", "context", "c", "type", "isMounting", "COMPONENT", "state", "NEXT_STATE", "props", "setDirty", "EMPTY_OBJ", "getDerivedStateFromProps", "assign", "componentWillMount", "componentWillUpdate", "renderHook", "render", "_renderToString", "isSvgMode", "selectValue", "parent", "asyncMode", "renderer", "EMPTY_STR", "vnodeType", "encodeEntities", "isArray", "renderArray", "rendered", "CHILDREN", "vnodeLength", "length", "i", "child", "_renderArray", "childRender", "Array", "push", "constructor", "beforeDiff", "contextType", "component", "cctx", "Fragment", "out", "tpl", "exprs", "value", "UNSTABLE_comment", "children", "provider", "__c", "__", "isClassComponent", "prototype", "createComponent", "count", "isDirty", "unsetDirty", "call", "e", "_suspended", "getChildContext", "options", "errorBoundaries", "getDerivedStateFromError", "componentDidCatch", "key", "err", "afterDiff", "ummountHook", "str", "unmount", "BEGIN_SUSPENSE_DENOMINATOR", "END_SUSPENSE_DENOMINATOR", "unshift", "then", "resolved", "error", "onError", "res", "errorHook", "renderNestedChildren", "result", "s", "html", "name", "v", "isSignal", "__html", "styleObjToCss", "NAMESPACE_REPLACE_REGEX", "test", "replace", "toLowerCase", "UNSAFE_NAME", "HTML_ENUMERATED", "has", "SVG_CAMEL_CASE", "HTML_LOWER_CASE", "Error", "SELF_CLOSING", "endTag", "startTag", "Set", "isSignal", "x", "peek", "props", "u", "i"]
}
